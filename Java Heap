/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package heap;

/**
 *
 * @author bamcc
 */
public class Heap {
    
     public int array[] = new int[25];
     
     
    public static int[] heapAdd(int[] a, int n){
     a=addN(a,n);
     int k=last(a);
     
     a=swapIt(a,k);
     return a;

    }
    
    
     
     
     public static void printArray(int[] array)
    {
        int n = array.length;
        for (int i=0; i<n; i++)
            System.out.print(array[i]+" ");
            System.out.println();
    }
     
     // tacks n onto the end of an array a must have some zeros
     //at the end.
     public static int[] addN(int[] a, int n){
     
         for(int i=0; i < a.length; i++){
            if(a[i]==0){
            a[i]=n;
            break;
            }
         
         }
     
     return a;
     }
     //Finds the last nonzero index in an array
     public static int last(int[] a){
     int i=0;
     while(a[i]!=0){i=i+1;}
     
     
     
      return i-1;
       }
    
     //adds n on to the back of array a and heaps it upward!
    public static int[] swapIt(int[] a, int n){
        
        int i=n;
        while(i!=0){
                             
                if(a[(i-1)/2]>a[i]){
                    int temp = a[(i-1)/2];
                    a[(i-1)/2]=a[i];
                    a[i]=temp;
                }
         
               
            
             i=(i-1)/2;             
         
            }
        return a;
    }
    //eats and array a and delets first entry and replaces
    //with last nonzero entry 
    public static int[] removeFirst(int[] a){
        
      
        
        a[0]=a[last(a)];
        a[last(a)]=0;
        
    return a;
    }
    
    //eats array bubbles the first down into position
    public static int[] trickle(int[] a){
    
    for(int i=0;i<a.length/2;){
    
    if((a[i]<=a[2*i+1] && a[i]<=a[2*i+2])||(a[2*i+1]==0 && a[2*i+2]==0)){i=a.length;}
    else if((a[i]>a[2*i+1] || a[i]>a[2*i+2])&&(a[2*i+1]!=0 && a[2*i+2]!=0)){
            int m =Math.min(a[2*i+1],a[2*i+2]);
            int d=0;
            if(m==a[2*i+1]){ d=2*i+1;}else{ d=2*i+2;}
             
            int temp=a[i];
            a[i]=m;
            a[d]=temp;
            i=d;
            }
        else{
            int temp =a[i];
            a[i]=a[2*i+1];
            a[2*i+1]=temp;
            i=a.length;
        }
    
    }
    
    
    return a;
    }
    
    //remove the first move last up
    //then trickly on down boi!
     public static int[] heapRemove(int[] a){
     
     a=removeFirst(a);
     a=trickle(a);
     return a;
     
     
     
     }
     //print that sucker
     public static void main(String args[])
    {
        int array1[] = new int[25];
        int array2[] = {12, 45, 21, 5, 21, 10, 3, 55, 15};
        
        int n = array1.length;
        printArray(array1);
        
        for(int i=0; i < array2.length ;i++){
        heapAdd(array1,array2[i]);
        }
        
        printArray(array1);
        
       
    
        
       
        printArray(array1);
        printArray(heapRemove(array1));  
        printArray(trickle(removeFirst(array1))); 
        
    }
}
