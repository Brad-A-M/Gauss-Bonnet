
/**
 *
 * Defines the data. An int value, id. Followed by a string, name
 */
public class Data {
    private String name;

    private int value;

    public Data(int value, String name) {
        this.name = name;
        this.value = value;
    }

    public String getName() {
        return this.name;
    }

    public int getValue() {
        return this.value;
    }
public String toString()
    {
        return value +" " + name;
    }
}
///////////////////////////////////////////////
package pkg232lab2;

/**
 *
 * Hash function for data. Uses linear probing and double the
 * length of the hash array if the load factor is over 80%
 * Includes a search and deleting function
 */
public class Main {
    
    public static void printArray(Data[] array)
    {
        int n = array.length;
        for (int i=0; i<n; i++)
            System.out.print(array[i]+" ");
            System.out.println();
    }
    
    //Takes an array of data and tacks an data element a on to the end
    //provided there are nulls at the end
public static Data[] addData(Data[] d, Data a){

for(int i=0; i < d.length; i++){
            if(d[i]==null){
                d[i]=a;
                break;
            }
         
 }

return d;
}

//Takes an array of data and adds data element a
//in the position d[value(a)mod length d)
//uses linear probing for collisions
public static Data[] addMod(Data[] d, Data a){
    if(a==null){return d;}
    else{
    
    int p = a.getValue()%d.length;
    
    if(d[p]==null){
        d[p]=a;
         }
        else{
            while(d[p]!=null){
                p=p+1;
                }
            d[p]=a;
        }
        return d;
}}
   //search an array d for an integer n
public static void search(Data[] d, int n){
   

    String s="";
    
    
    boolean found = false;
    
    for(int i=0; i <d.length; i++){
        
        if(d[i]==null){}
        else if(n==d[i].getValue()){
           found = true;
           s=d[i].getName();
           
            break;  
        }
    }
      
     if(found){System.out.println("We got "+ n + " it's name is "+s);}
     else{System.out.println(n+ " is not here bro");}
   
      
    }

   //search an array d for an integer n if its there we delete it
//and return the array
public static Data[] delete(Data[] d, int n){
    boolean found = false;
    
    for(int i=0; i <d.length; i++){
        
        if(d[i]==null){}
        else if(n==d[i].getValue()){
           d[i]=null;
           
           
            break;  
        }
    }
    return d;
}
        
//in comes an array of data and out comes the ratio of nulls/length
    public static double loadFactor(Data[] d){
        
        double f;
        int n=d.length;
        double c=0;
        for(int i=0; i < d.length; i++){
            
            if(d[i]==null){c=c+1.0;}
            }
        f=(n-c)/n;
    return f;
    } 
    
    //Inputs a array of data and a data element and doubles that lenght
    //if the load factor is over .8
    public static Data[] Hash(Data[] d, Data a){
        Data b[] = new Data[2*d.length];
        if(loadFactor(d)>.8){
            
            
            for(int i=0; i<d.length;i++){
        
            b=addMod(b,d[i]);
            }
            b=addMod(b,a);
            return b;
       }    
        
       else{
        
        return addMod(d,a);
        }
        
    
    }
    
    //inputs an Data array no nulls and hashes it
    //returns the hash
    public static Data[] hasher(Data[] d){//d no nulls, a hashtable
    Data a[] = new Data[5];
    for(int i=0;i<d.length;i++){
    a=Hash(a,d[i]);
    }
    return a;
    
    }
    
    
    public static void main(String[] args) {
        
        Data array1[] = new Data[4];
        Data array2[] = new Data[5];
        Data array3[] = new Data[5];
        
       
       
        Data a = new Data(4,"Hey");
        Data b = new Data(5,"gurl");
        Data c = new Data(9765,"feel");
        Data d = new Data(5555,"good");
        Data e = new Data(420,"blaze");
        array1=addData(array1,a);
        array1=addData(array1,b);
        array1=addData(array1,c);
        array1=addData(array1,d);
        
        search(array1,7);
        
        printArray(delete(array1,4));
        printArray(array1);
        
        printArray(hasher(array1));
        printArray(Hash(array2,a));
        printArray(Hash(array2,b));
        
        printArray(Hash(array2,c));
        printArray(Hash(array2,d));
        printArray(Hash(array2,e));
        
       // search(array2,5);
        
        
    }
    
}
